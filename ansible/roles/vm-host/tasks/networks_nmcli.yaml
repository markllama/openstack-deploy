---
#
# Assign interface names to nics by MAC
#
#- name: interface device
#  lineinfile:
#    path: "/etc/sysconfig/network-scripts/ifcfg-{{ item.value.device }}"
#    regexp: "^DEVICE="
#    line: "DEVICE={{ item.value.device }}"
#    state: present
#    create: true
#    backup: true
#    mode: 644
#  with_dict: "{{ bridges }}"
#  tags: iface_files
#  notify: restart udevd

#- name: interface mac address
#  lineinfile:
#    path: "/etc/sysconfig/network-scripts/ifcfg-{{ item.value.device }}"
#    regexp: "^HWADDR="
#    line: "HWADDR={{ item.value.mac }}"
#    mode: 644
#    state: present
#    create: false
#    backup: false
#  with_dict: "{{ bridges }}"
#  tags: iface_files  
#  notify: restart udevd

- name: bridges
  community.general.nmcli:
    conn_name: "br-{{ item.key }}"
    ifname: "br-{{ item.key }}"
    type: bridge
    autoconnect: yes
    ip4: "{{ item.value.ipv4.address }}/{{ item.value.ipv4.prefix }}"
    state: present
  with_dict: "{{ bridges }}"
  tags: network  


# Set the bridge slave
- name: bridge-slaves
  community.general.nmcli:
    conn_name: "{{ item.value.device }}"
    ifname: "if-{{ item.key }}"
    type: bridge-slave
    master: "br-{{ item.key }}"
    autoconnect: yes
    state: present
  with_dict: "{{ bridges }}"
  tags: network
